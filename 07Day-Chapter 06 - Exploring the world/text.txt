(props):
props.restaurant.data.name

({restaurant})
// this is a prop passed in component 
restaurant.data.name





MonoLith

Microservices Architecture:
Instead of having just 1 project, now we have small small different projects 
UI project
Backend API project
Notification project
Logs project
Authentication project
etc

Everything can be hosted on different ports and that is why we have different ports

Advantages:
Major one:
Easier to test
SOC(Seperation of Concern)=> No need to worry about other project


Fetch():
As an when my page loads call an API and fill the data.

2 Approach:

1
Page Load=> API call(300ms)=>render page(500ms)

2=>best
Page Load=> render the page(100ms)=>API(300ms)=>update UI.(500ms)

React gives the amazing functionality which is known as useEffect


useEffect:
UseEffect is a hook ie, a function
UseEffect has callback function and dependancy array.
callback function will be called whenever the useEffect wants to call and not immediately
React will make sure that it will call at a specific time.

Whenever our component renders and rerenders so after each render it will call the function which we have passes inside the useEffect.

When does the component renders?
There are 2 places where it happens
1-State chnages
2-props chnages

But thats a bad way to cal it after each render , we dont want to rerender so we have to pass empty dependancy array.

i can pass even anything in dependancy array , if i want that after that change itself it should work

useEffect-2 parameters

****
[]-not passed: Render again and again 
[]-passed:empty dependancyarray: once after render
[searchTxt]: once after the initial render + everytime after the rerender(my searchText changes)

When we want to change something 

https://www.swiggy.com/dapi/restaurants/list/v5?lat=12.9351929&lng=77.62448069999999&page_type=DESKTOP_WEB_LISTING

Error:CORS Error
Access to fetch at 'https://www.swiggy.com/dapi/restaurants/list/v5?lat=12.9351929&lng=77.62448069999999&page_type=DESKTOP_WEB_LISTING' from origin 'http://localhost:1234' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.

Add extension in the chrome
Allow CORS: Access-Control-Allow-Origin

How to handle errors.


Shimmer UI: 

Conditional Rendering:
if restaurant is empty=>shimmer UI 
if restaurant has data=>actual data UI

"Roti"==="roti
>False

"Roti".toLowerCase()==="roti".toLowerCase()
>true

Any Javascript works here , if ts an expression
a=10// 1 statement
console.log(a)//2 statement
wnt work because both of the above is an statement
there is a difference between statement and expression

console.log()// its an expression

((a=10),console.log(a))
This will work because it became an expression
so ultimately you can run any piece of code.
but u can run any JS code but only expression not statement
























